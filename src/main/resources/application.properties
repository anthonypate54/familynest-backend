# Base configuration that will be overridden by profiles
spring.datasource.username=postgres
spring.datasource.password=postgres
# Hibernate DDL auto setting options:
# - validate: validate the schema, makes no changes to the database
# - update: update the schema if necessary
# - create: creates the schema, destroying previous data
# - create-drop: drop the schema at the end of the session
# - none: does nothing with the schema
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
# Disable schema validation to avoid column type mismatch errors
spring.jpa.properties.hibernate.javax.persistence.schema-validation.enabled=false

# Open Session in View (OSIV) Configuration
# IMPORTANT: For production, set this to false to prevent potential memory leaks and improve performance
# For development/testing, you can set this to true in the respective profile properties
spring.jpa.open-in-view=true

logging.level.root=INFO
logging.level.com.familynest=DEBUG
logging.level.com.familynest.controller=DEBUG
logging.level.com.familynest.repository=DEBUG
# Debug all HTTP requests
logging.level.web=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web=DEBUG
# Directory for storing uploaded photos
file.upload-dir=${FILE_UPLOAD_DIR:${user.home}/projects/familynest-project/familynest-backend/uploads}
storage.type=local

# JWT Configuration
jwt.secret=tc7137c887fdd8b2be038c31abf4f55359126579f2b5e55e29337a5c45d4fd710
# Access token: 4 hours (14400000ms) - better for family messaging app
jwt.access.expiration=14400000
# Refresh token: 30 days (2592000000ms)
jwt.refresh.expiration=2592000000
# Legacy expiration setting (kept for backward compatibility)
jwt.expiration=14400000

# Security Configuration
spring.security.require-ssl=false
spring.security.enable-csrf=false

# Rate Limiting Configuration
rate.limit.max-requests=5
rate.limit.time-window-seconds=60

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379

# CORS Configuration
cors.allowed-origins=http://localhost:8080,http://localhost:3000,http://10.0.2.2:8080,http://10.0.2.2:3000,http://10.0.0.9:8080
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# Logging Configuration
logging.level.com.familynest=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot=TRACE
# Explicitly set UserController logging level to DEBUG to prevent ERROR level debug messages
logging.level.com.familynest.controller.UserController=DEBUG

# Server Configuration
server.address=0.0.0.0
server.port=8080
server.tomcat.max-http-form-post-size=25MB
server.tomcat.max-swallow-size=25MB
server.tomcat.connection-timeout=120000
server.tomcat.keep-alive-timeout=300000
server.tomcat.max-keep-alive-requests=1000
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.servlet.context-path=
# Session timeout (30 minutes)
server.servlet.session.timeout=30m

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=false
spring.flyway.baseline-version=0
spring.flyway.out-of-order=true
spring.flyway.clean-disabled=false
# Enable flyway clean on startup (WARNING: This will delete all data in the database)
spring.flyway.clean-on-validation-error=false
spring.flyway.table=flyway_schema_history
spring.flyway.ignore-migration-patterns=*:missing
# Ignore checksum verification for modified migrations
spring.flyway.ignore-migration-checksum=true
spring.flyway.repair-on-migrate=true
# Exclude backup directories
spring.flyway.sql-migration-suffixes=.sql
# Only scan main migration directory, not subfolders
spring.flyway.locations=classpath:db/migration

# Liquibase Configuration (disabled in favor of Flyway)
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

# Database connection pool optimization
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=8
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.auto-commit=true
# Validate connections before use
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
# Keep connections alive
spring.datasource.hikari.keepalive-time=300000

# Disable Hibernate second-level caching (was causing issues)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
# Comment out these lines to avoid JCache errors
# spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
# spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider

# Optimize Hibernate
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Response caching
spring.web.resources.cache.cachecontrol.max-age=86400
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**

# Video and file upload configuration moved to bottom of file

app.base-url=http://localhost:8080
app.upload.dir=${file.upload-dir}
app.thumbnail.dir=${file.upload-dir}/thumbnails
app.videos.dir=${file.upload-dir}/videos
app.photos.dir=${file.upload-dir}/photos
# URL paths for client consumption
app.url.videos=/uploads/videos
app.url.thumbnails=/uploads/thumbnails
app.url.images=/uploads/images
app.url.photos=/uploads/photos
# Default thumbnail file
app.default.thumbnail=default_thumbnail.jpg
# Control whether to use FFmpeg for thumbnail generation
app.use.ffmpeg=true

# Configure static resource location to serve uploaded files
spring.mvc.static-path-pattern=/uploads/**
spring.web.resources.static-locations=file:${app.upload.dir}/, file:${app.thumbnail.dir}/, file:${app.photos.dir}/, file:${app.videos.dir}/

# Set debug level for thumbnail service
logging.level.com.familynest.service.ThumbnailService=DEBUG
logging.level.com.familynest.service.MediaService=DEBUG

# Storage Service URLs - used for constructing URLs in responses
# For local development, use relative URLs
storage.url.prefix=

# Log configuration for local development
logging.level.com.familynest=DEBUG

# Enhanced Hibernate performance optimizations
spring.jpa.properties.hibernate.default_batch_fetch_size=20
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=2048
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size=128
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# These lines were commented out to enable security
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
# security.basic.enabled=false
# management.security.enabled=false
# spring.security.enabled=false

# Local file system upload directory (default)
file.upload-dir=${FILE_UPLOAD_DIR:${user.home}/projects/familynest-project/familynest-backend/uploads}

# Thumbnail path (optional, for local)
app.thumbnails.path=/uploads/thumbnails/

# Google Workspace SMTP Configuration for FamilyNest emails
# Using professional Google Workspace account
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=anthonypate@infamilynest.com
spring.mail.password=xqre qfhl zpew boao
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.debug=false

# AWS SES Configuration (for email sending)
# Set these via environment variables or override in profile-specific properties
aws.ses.region=${AWS_SES_REGION:us-west-2}
aws.ses.access-key=${AWS_SES_ACCESS_KEY:}
aws.ses.secret-key=${AWS_SES_SECRET_KEY:}
aws.ses.from-email=${AWS_SES_FROM_EMAIL:info@infamilynest.com}

# Email provider selection (smtp or ses)
email.provider=${EMAIL_PROVIDER:smtp}

# File Upload Configuration - Allow up to 25MB files
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=25MB
