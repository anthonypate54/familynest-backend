# Test Database Configuration
# This profile connects to a dedicated PostgreSQL database for UI testing

# Database connection settings
spring.datasource.url=jdbc:postgresql://localhost:5432/familynest_test
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Data initialization
spring.sql.init.mode=always
spring.sql.init.platform=testdb
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true
# Specify the data initialization script directly
spring.sql.init.data-locations=classpath:data-testdb.sql

# Disable external migrations for initial setup
spring.flyway.enabled=false
spring.liquibase.enabled=false

# Enable H2 console for visualization (useful even with PostgreSQL)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Logging configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.familynest=DEBUG

# Security relaxation (only for testing!)
spring.security.user.name=test
spring.security.user.password=test

# Allow loading large dataset
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB 